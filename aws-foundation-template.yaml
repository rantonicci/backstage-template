apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: aws-foundation-template
  title: AWS Foundation Terraform v5
  description: Cria um novo repositório baseado no AWS Foundation Terraform.
spec:
  owner: team-devops
  type: service

  parameters:
    - title: Informações do Projeto
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Nome do Projeto
          type: string
          description: Nome do novo repositório que será criado.
          ui:field: EntityNamePicker
        description:
          title: Descrição
          type: string
          description: Breve descrição do projeto.
        owner:
          title: Dono
          type: string
          description: Proprietário do repositório.
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Escolha um repositório
      required:
        - repoUrl
      properties:
        repoUrl:
          title: URL do Repositório
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-template
      name: Copiando Código do AWS Foundation
      action: fetch:template
      input:
        url: https://github.com/rantonicci/nttdata-ccoe-backstage-aws-foundation/archive/main.zip
        targetPath: ./workspace
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}

    - id: create-catalog-info
      name: Criando `catalog-info.yaml`
      action: fs:write
      input:
        path: ./workspace/catalog-info.yaml
        content: |
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.component_id }}
            description: ${{ parameters.description }}
          spec:
            type: service
            owner: ${{ parameters.owner }}
            lifecycle: experimental

    - id: publish
      name: Publicando Código no Repositório
      action: publish:github
      input:
        allowedHosts:
          - github.com
        repoUrl: ${{ parameters.repoUrl }}
        branch: main
        commitMessage: "Publicando código inicial com catalog-info.yaml"
        files:
          - ./workspace/*

    - id: wait-for-github
      name: Aguardando GitHub processar commit
      action: debug:wait
      input:
        seconds: 5

    - id: register
      name: Registrando no Catálogo do Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repositório Criado
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Abrir no Catálogo
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
